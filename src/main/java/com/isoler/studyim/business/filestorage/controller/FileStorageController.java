package com.isoler.studyim.business.filestorage.controller;


import com.isoler.studyim.business.filestorage.model.dto.FileDownloadResultDto;
import com.isoler.studyim.business.filestorage.model.dto.FileUploadResultDto;
import com.isoler.studyim.business.filestorage.service.IFileStorageService;
import com.isoler.studyim.common.api.CommonResult;
import com.isoler.studyim.common.util.FileUtil;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.time.LocalDateTime;

/**
 * <p>
 * 前端控制器
 * </p>
 *
 * @author AutoGenerated
 * @since 2022-10-02
 */
@RestController
@RequestMapping("file")
@Api(tags = "文件存储接口")
public class FileStorageController {

    @Resource
    private IFileStorageService fileStorageService;

    /**
     * 下载文件
     *
     * @param id
     */
    @GetMapping("{id}")
    @ApiOperation("下载文件")
    public void downloadFile(@PathVariable("id") String id, HttpServletResponse response) throws IOException {
        FileDownloadResultDto dto = fileStorageService.downloadFile(id);
        FileUtil.downloadFile(response, dto.getInputStream(), dto.getFileName());
    }

    /**
     * 上传文件
     *
     * @param file
     * @return
     */
    @PostMapping("")
    @ApiOperation("上传文件")
    public CommonResult<FileUploadResultDto> uploadFile(MultipartFile file) {
        return CommonResult.success(fileStorageService.uploadFile(file));
    }

    /**
     * 删除文件
     *
     * @param id
     * @return
     */
    @DeleteMapping("{id}")
    @ApiOperation("删除文件")
    public CommonResult<String> deleteFile(@PathVariable("id") String id) {
        fileStorageService.deleteFile(id);
        return CommonResult.success("文件删除成功");
    }

    @DeleteMapping("")
    @ApiOperation("清理过期文件")
    public CommonResult<String> deleteFile() {
        fileStorageService.cleanExpireFile(LocalDateTime.now());
        return CommonResult.success("清理过期文件");
    }

}
