<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isoler.studyim.business.chatmessage.mapper.ChatMessageMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.isoler.studyim.business.chatmessage.model.bean.ChatMessage">
        <id column="c_id" property="id" />
        <result column="c_type" property="type" />
        <result column="c_sender_id" property="senderId" />
        <result column="c_target_id" property="targetId" />
        <result column="c_target_type" property="targetType" />
        <result column="c_content" property="content" />
        <result column="c_file_id" property="fileId" />
        <result column="c_file_name" property="fileName" />
        <result column="c_status" property="status" />
        <result column="dt_create_time" property="createTime" />
        <result column="dt_update_time" property="updateTime" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        c_id, c_type, c_sender_id, c_target_id, c_target_type, c_content, c_file_id, c_file_name, c_status, dt_create_time, dt_update_time
    </sql>
    <update id="invalidMessage">
        update db_chat.t_chat_message chat set c_status ='2'
        <where>
            c_file_id is not null
            and c_status !='2'
            and not exists (select 1 from db_chat.t_file_storage storage where storage.c_id = chat.c_file_id)
        </where>
    </update>

</mapper>
